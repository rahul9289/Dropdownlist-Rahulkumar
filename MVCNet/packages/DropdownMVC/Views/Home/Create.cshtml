@model DropdownMVC.Models.EmployeDetail

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())


{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>EmployeDetail</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.RadioButtonFor(model => model.Gender, true)
                <span>Male</span>

                @Html.RadioButtonFor(model => model.Gender, true)
                <span>FeMale</span>

                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @*@Html.LabelFor(model => model.StateName, htmlAttributes: new { @class
                <script src="~/Scripts/bootstrap.esm.js"></script> = "control-label col-md-2" })*@
            <Label class="control-label col-md-2">State</Label>
            <div class="col-md-10">
                @*@Html.DropDownListFor(model => model.StateID,
                    new SelectList(ViewBag.StateData, "StateID", "StateName"), "Select StateName",
                    new { @class = "from-control",@onchange = "BindCity(this.value)" })*@

                @Html.DropDownListFor(model => model.StateID,
                                new SelectList((System.Collections.IEnumerable)ViewBag.StateData, "StateID", "StateName"), "Select StateName",
                                new { @class = "from-control", @onchange = "BindCity(this.value)" })
                @Html.ValidationMessageFor(model => model.StateID, "", new { @class = "text-danger" })

            </div>
        </div>



        <div class="form-group">
            <Label class="control-label col-md-2">City</Label>
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.CityID,
                                 new SelectList((System.Collections.IEnumerable)ViewBag.CityData, "CityID", "CityName"), "Select CityName",
                                 new { @class = "from-control" })
                @Html.ValidationMessageFor(model => model.CityID, "", new { @class = "text-danger" })

                @*@Html.DropDownListFor(Model=>Model.CityID,
                    new SelectList((System.Collections.IEnumerable)ViewBag.CityData,"CityID","CityName",
                     new { @class = "form-control"})*@

            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DepartmentID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.DepartmentID,
                                new SelectList(ViewBag.DepartmentData, "DepartmentID", "DepartmentName"), "Select DepartmentName",
                                new { @class = "from-control" })
                @Html.ValidationMessageFor(model => model.DepartmentID, "", new { @class = "text-danger" })

            </div>
        </div>



        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>






    <script>
        function BindCity(val) {


            debugger;
            // $(document).ready(function() {
            //    $('#CityID'.on('change', function () {
            //        var stateId = $(this).val();
            var stateId = $('#StateID').val();
            $("#CityID").empty(),
             $("#CityID").append('<option Value="">---select---</option>');

            $.ajax({
                url: '/Home/BindCity',
                type: "GET",
                dataType: "JSON",
                data: { "StateID": stateId },
                success: function (GetCitys) {

                    if (GetCitys != null) {
                        $.each(GetCitys, function (i, city) {
                            $("#CityID").append($('<option></option>').val(city.CityID).html(city.CityName));
                        });
                    }



                }
            });
        }

    </script>


}

<div>
    @Html.ActionLink("Back to List", "EmployeDetail")
</div>


<script src="~/Scripts/jquery-3.6.1.min.js"></script>
@*<script src="~/Scripts/jquery-3.4.1.min.js"></script>*@
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>